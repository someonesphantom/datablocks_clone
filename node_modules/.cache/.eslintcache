[{"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/index.js":"1","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/App.js":"2","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/reportWebVitals.js":"3","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/home.js":"4","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/flows.js":"5","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/reactflow.js":"6","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/login/login.js":"7","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/dialog.js":"8","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/flowcontext.js":"9"},{"size":534,"mtime":1656918181819,"results":"10","hashOfConfig":"11"},{"size":929,"mtime":1657178541057,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1656918181820,"results":"13","hashOfConfig":"11"},{"size":8420,"mtime":1657178471722,"results":"14","hashOfConfig":"11"},{"size":11866,"mtime":1657178471722,"results":"15","hashOfConfig":"11"},{"size":10908,"mtime":1657176167692,"results":"16","hashOfConfig":"11"},{"size":7194,"mtime":1657176156924,"results":"17","hashOfConfig":"11"},{"size":10515,"mtime":1657177448785,"results":"18","hashOfConfig":"11"},{"size":99,"mtime":1657177626667,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1i9vumu",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"23"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/index.js",[],[],[],"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/App.js",["50","51","52"],[],"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/reportWebVitals.js",[],[],"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/home.js",["53","54","55","56","57","58","59","60","61","62","63","64","65","66","67"],[],"import React, { useState, useRef, useCallback, useEffect } from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport PropTypes from 'prop-types';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Flows from './flows';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport Menu from '@mui/material/Menu';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Tooltip from '@mui/material/Tooltip';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport logo from '../resources/logo.png'\nimport { useNavigate } from \"react-router-dom\";\nimport FlowContext from './flowcontext';\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n      sx={{ fontColor: \"white\" }}\n    >\n      {value === index && (\n        <Box sx={{ p: 3, color: 'rgba(0, 0, 0, 0.85)', }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\n\nexport default function Home() {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const [flowsvalue, setflowsvalue] = useState([]);\n  const flowdata = {\n    flowname: flowsvalue,\n    setflowsvalue\n  };\n\n  return (\n    <FlowContext.Provider value={flowdata}>\n      <Box style={{ backgroundColor: \"#1A202C\", height: '100%', minHeight: \"100vh\" }}>\n        <AppBar position=\"static\" style={{ background: '#1A192B', height: \"45px\" }}>\n          <Container maxWidth=\"xl\">\n            <Toolbar disableGutters>\n              <img src={logo} alt=\"My logo\" width=\"40\" height=\"50\" style={{ marginTop: \"-15px\", marginLeft: \"-15px\" }} sx={{ display: { xs: 'none', md: 'flex' }, mr: 1, width: '10vw', hright: '10vh' }} />\n              <Typography\n                variant=\"h6\"\n                noWrap\n                component=\"a\"\n                href=\"/\"\n                sx={{\n                  mr: 2,\n                  display: { xs: 'none', md: 'flex' },\n                  fontFamily: 'sans-serif',\n                  fontWeight: 550,\n                  fontSize: \"14px\",\n                  letterSpacing: '.0rem',\n                  color: 'rgb(238, 240, 242)',\n                  textDecoration: 'none',\n                  marginTop: \"-15px\"\n                }}\n              >\n                datablocks\n              </Typography>\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n\n              </Typography>\n\n              <Button\n                color=\"inherit\" sx={{ fontSize: \"11px\", marginTop: \"-15px\", marginRight: \"-10px\" }}\n                onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = '/';\n                }}\n              >LOGOUT</Button>\n\n            </Toolbar>\n          </Container>\n        </AppBar>\n        <Box sx={{\n          width: '80%',\n          marginLeft: '9%',\n          marginTop: '2%'\n        }}>\n          <Box sx={{ color: \"white\", borderBottom: 1, borderColor: 'divider', marginLeft: '1.1%' }}>\n            <Tabs textColor=\"white\" value={value} onChange={handleChange} aria-label=\"basic tabs example\" TabIndicatorProps={{ style: { backgroundColor: \"white\", width: \"60px\", marginLeft: \"1.25%\" } }}>\n              <Tab label=\"Flows\" {...a11yProps(0)} style={{ maxWidth: \"2%\" }} />\n              <Tab label=\"Account\" {...a11yProps(1)} style={{ maxWidth: \"2%\" }} />\n            </Tabs>\n          </Box>\n          <TabPanel value={value} index={0} style={{ marginTop: \"-1.5%\" }}>\n            <Flows />\n          </TabPanel>\n          <TabPanel value={value} index={1}>\n            <Box\n              sx={{\n                marginTop: 6,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n              }}\n            >\n              <Typography component=\"h1\" variant=\"h5\" color=\"white\" sx={{ fontSize: '15px', fontWeight: 700, marginLeft: \"-88.3%\", marginTop: \"-6%\" }} >\n                Change Password\n              </Typography>\n              <Box component=\"form\" noValidate sx={{ mt: 1, color: \"white\", fontWeight: 300, fontSize: '10px', marginLeft: \"-29%\" }}>\n                &nbsp;Old Password*\n                <TextField\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"password\"\n                  label=\"\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  size='small'\n                  InputLabelProps={{ style: { color: '#4A5568' } }}\n                  sx={{ border: '1px solid #4A5568', borderRadius: \"6px\" }}\n                  inputProps={{ style: { fontFamily: 'nunito', color: 'white' } }}\n                  style={{ marginTop: \"8px\" }}\n                />\n                &nbsp;New Password*\n                <TextField\n                  margin=\"normal\"\n                  fullWidth\n                  name=\"password\"\n                  label=\"\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  size='small'\n                  InputLabelProps={{ style: { color: '#4A5568' } }}\n                  sx={{ border: '1px solid #4A5568', borderRadius: \"6px\" }}\n                  inputProps={{ style: { fontFamily: 'nunito', color: 'white' } }}\n                  style={{ marginTop: \"8px\" }}\n                />\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  style={{ textTransform: 'none', height: \"40px\", width: \"160px\" }}\n                  sx={{\n                    mt: 0, mb: 0, background: 'rgba(255, 255, 255, 0.08)', ':hover': {\n                      bgcolor: '#6866AC',\n                      color: 'white',\n                    },\n                    fontWeight: 700,\n                    fontFamily: 'Polaris'\n                  }}\n                  onClick={(e) => {\n                    e.preventDefault();\n                    window.location.href = '/home';\n                  }}\n                >\n                  Change Password\n                </Button>\n              </Box>\n            </Box>\n            <Box component=\"form\" noValidate sx={{ mt: 1, color: \"white\", fontWeight: 700, fontSize: '15px', position: \"relative\", marginTop: \"25px\", marginLeft: \"-0.5%\" }}>\n              Delete User\n            </Box>\n            <Box component=\"form\" noValidate sx={{ mt: 1, color: \"white\", fontWeight: 300, fontSize: '10px', position: \"relative\", marginTop: \"7px\", marginLeft: \"-0.5%\" }}>\n              When you delete your user all connected data will be removed from our servers.\n            </Box>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              style={{ textTransform: 'none', height: \"40px\", width: \"160px\", marginTop: \"10px\", marginLeft: \"-0.5%\" }}\n              sx={{\n                mt: 0, mb: 0, background: 'rgba(255, 255, 255, 0.08)', ':hover': {\n                  bgcolor: '#6866AC',\n                  color: 'white',\n                },\n                fontWeight: 700,\n                fontFamily: 'Polaris'\n              }}\n              onClick={(e) => {\n                e.preventDefault();\n                window.location.href = '/home';\n              }}\n            >\n              Delete my user data\n            </Button>\n          </TabPanel>\n\n        </Box>\n      </Box>\n    </FlowContext.Provider>\n\n  );\n}","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/flows.js",["68","69","70","71","72","73","74","75","76"],[],"import React, { useState, useRef, useCallback, useEffect, useContext } from 'react';\nimport Button from '@mui/material/Button';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport EditOutlinedIcon from '@mui/icons-material/EditOutlined';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport TextField from '@mui/material/TextField';\nimport DoneIcon from '@mui/icons-material/Done';\nimport { useNavigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport FlowContext from './flowcontext';\n\n\n\nfunction getCurrentDate(separator = '/') {\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let hours = newDate.getHours();\n    let minutes = (newDate.getMinutes() < 10 ? '0' : '') + newDate.getMinutes();\n    return `${date}${separator}${month < 10 ? `0${month}` : `${month}`}${separator}${year} ${hours}${':'}${minutes}`\n}\n\n\nconst Flows = (props) => {\n    const [edit, setEdit] = React.useState(false);\n    const [editid, setEditId] = useState('');\n    const flowcontext = useContext(FlowContext);\n    const [flows, setFlows] = useState(flowcontext.flowname);\n    // console.log(\"in flows.js:\", flowcontext);\n\n    const setflowcontext = () => {\n        flowcontext.setflowsvalue(flows);\n        console.log(\"called it\")\n    }\n    const editname = (value, i) => {\n        let newArr = [...flows];\n        newArr[i].flowname = value;\n        setFlows(newArr)\n        setflowcontext();\n    }\n\n    // console.log('the structured data in flows is:', array)\n    // console.log(\"info:\",getCurrentDate())\n    return (\n        <>\n            <div>\n                <Button\n                    type=\"submit\"\n                    variant=\"contained\"\n                    style={{ textTransform: 'none', marginBottom: \"0.8%\", marginLeft: \"89%\", marginTop: \"-7.5%\" }}\n                    onClick={(e) => {\n                        e.preventDefault();\n                        let newflow = {\n                            flowname: 'untitled flow',\n                            creationinfo: getCurrentDate(),\n                            updationinfo: getCurrentDate(),\n                            nodes: [],\n                            edges: []\n                        }\n                        setFlows(currflow => [...currflow, newflow]);\n                        setflowcontext();\n                    }} y\n                    sx={{\n                        mt: 0, mb: 0, background: 'rgba(255, 255, 255, 0.08)', ':hover': {\n                            bgcolor: '#4c497e',\n                            color: 'white',\n                        },\n                        fontFamily: 'monospace'\n                    }}\n                >\n                    + new flow\n                </Button>\n                <div style={{ marginTop: \"-2%\" }}>\n                    {\n                        flows.map((currflow, i) => (\n                            <>\n                                <Button\n                                    disableRipple\n                                    style={{ textTransform: 'none', whiteSpace: 'nowrap', justifyContent: \"left\", marginBottom: \"-1.3%\" }}\n                                    sx={{\n                                        mt: 0, mb: 0, background: '#333154', ':hover': {\n                                            bgcolor: '#4c497e',\n                                            color: 'white',\n                                        },\n                                        fontFamily: 'system-ui',\n                                        width: \"100%\",\n                                        minHeight: \"90px\",\n                                        color: \"white\",\n                                        fontWeight: 600,\n                                        fontSize: \"18px\"\n                                    }}\n                                    onClick={(e) => {\n                                        e.preventDefault();\n                                        window.location.href = '/reactapp';\n                                    }}\n                                >\n                                    <div style={{ textAlign: \"left\", marginLeft: \"0.3%\" }}>\n                                        {\n                                            edit == true && editid == i ? (\n                                                <div style={{ marginTop: \"2%\", width: \"120px\", marginLeft: \"-4%\" }}>\n                                                    <Button\n                                                        disableRipple\n                                                        sx={{ width: '300%' }}\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            e.preventDefault();\n                                                        }}\n                                                    >\n                                                        <TextField id=\"outlined-basic\" size='small' sx={{ input: { color: 'white' }, border: '1px solid white', width: '300%' }} value={currflow.flowname} variant=\"outlined\"\n                                                            onChange={(e) => { editname(e.target.value, i) }}\n                                                        />\n                                                    </Button>\n\n                                                    <Button\n                                                        style={{ textTransform: 'none', marginTop: \"-1px\", borderRadius: 0, marginLeft: \"-9px\" }}\n                                                        sx={{\n                                                            mt: 0, mb: 0, background: '#434161', ':hover': {\n                                                                bgcolor: '#4c497e',\n                                                                color: 'white',\n                                                            },\n                                                            fontFamily: 'monospace',\n                                                            minWidth: \"40px\",\n                                                            minHeight: \"42px\",\n                                                            border: 1,\n                                                            borderColor: \"white\"\n                                                        }}\n                                                        onClick={(e) => {\n                                                            e.stopPropagation();\n                                                            e.preventDefault();\n                                                            let newArr = [...flows];\n                                                            newArr[i].updationinfo = getCurrentDate();\n                                                            setFlows(newArr);\n                                                            setflowcontext();\n                                                            setEdit(false);\n                                                        }}\n                                                        startIcon={<DoneIcon style={{ color: \"white\", marginRight: \"-13px\" }} />}\n                                                    />\n                                                </div>\n                                            ) :\n                                                (\n                                                    <div style={{ textAlign: \"left\" }}>\n                                                        {currflow.flowname}\n                                                    </div>\n                                                )\n\n                                        }\n                                        <div style={{ fontSize: '12px', color: '#9ca8b3', fontWeight: 'normal' }}>\n                                            created at: {currflow.creationinfo}\n                                            <br />\n                                            updated at: {currflow.updationinfo}\n                                        </div>\n                                    </div>\n                                    <div style={{ marginBottom: \"25px\", position: \"absolute\", marginLeft: \"89%\" }}>\n                                        <Button\n                                            style={{ textTransform: 'none' }}\n                                            sx={{\n                                                mt: 0, mb: 0, background: '#434161', ':hover': {\n                                                    bgcolor: '#4c497e',\n                                                    color: 'white',\n                                                },\n                                                fontFamily: 'monospace',\n                                                minWidth: \"40px\",\n                                                minHeight: \"30px\",\n                                            }}\n                                            onClick={(e) => {\n                                                setEdit(true)\n                                                setEditId(i)\n                                                e.stopPropagation();\n                                                e.preventDefault();\n                                                let newArr = [...flows];\n                                                newArr[i].updationinfo = getCurrentDate();\n                                                setFlows(newArr);\n                                                setflowcontext();\n                                            }}\n                                            startIcon={<EditOutlinedIcon style={{ color: \"white\", marginRight: \"-13px\" }} />}\n                                        />\n\n                                        <Button\n                                            style={{ textTransform: 'none', marginLeft: \"10px\" }}\n                                            sx={{\n                                                mt: 0, mb: 0, background: '#434161', ':hover': {\n                                                    bgcolor: '#4c497e',\n                                                    color: 'white',\n                                                },\n                                                fontFamily: 'monospace',\n                                                minWidth: \"40px\",\n                                                minHeight: \"30px\",\n                                            }}\n                                            onClick={(e) => {\n                                                e.stopPropagation();\n                                                e.preventDefault();\n                                                setFlows([\n                                                    ...flows.slice(0, i),\n                                                    ...flows.slice(i + 1, flows.length)\n                                                ]);\n                                                setflowcontext();\n                                            }}\n                                            startIcon={<DeleteOutlineOutlinedIcon style={{ color: \"white\", marginRight: \"-13px\" }} />}\n                                        />\n                                    </div>\n                                </Button>\n                                <br />\n                                <br />\n                            </>\n                        ))\n                    }\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Flows","/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/reactflow.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],[],"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/login/login.js",["104","105","106","107","108","109","110","111","112","113"],[],"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/dialog.js",["114","115","116","117","118"],[],"/Users/venkat/Desktop/mine/EAIESB/github/datablocks_clone/src/components/e-insta/flowcontext.js",[],[],{"ruleId":"119","severity":1,"message":"120","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":33},{"ruleId":"119","severity":1,"message":"123","line":1,"column":35,"nodeType":"121","messageId":"122","endLine":1,"endColumn":46},{"ruleId":"119","severity":1,"message":"124","line":1,"column":48,"nodeType":"121","messageId":"122","endLine":1,"endColumn":57},{"ruleId":"119","severity":1,"message":"120","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":33},{"ruleId":"119","severity":1,"message":"123","line":1,"column":35,"nodeType":"121","messageId":"122","endLine":1,"endColumn":46},{"ruleId":"119","severity":1,"message":"124","line":1,"column":48,"nodeType":"121","messageId":"122","endLine":1,"endColumn":57},{"ruleId":"119","severity":1,"message":"125","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"126","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":12},{"ruleId":"119","severity":1,"message":"127","line":11,"column":10,"nodeType":"121","messageId":"122","endLine":11,"endColumn":21},{"ruleId":"119","severity":1,"message":"128","line":11,"column":23,"nodeType":"121","messageId":"122","endLine":11,"endColumn":36},{"ruleId":"119","severity":1,"message":"129","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":12},{"ruleId":"119","severity":1,"message":"131","line":17,"column":8,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},{"ruleId":"119","severity":1,"message":"132","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":15},{"ruleId":"119","severity":1,"message":"133","line":19,"column":8,"nodeType":"121","messageId":"122","endLine":19,"endColumn":16},{"ruleId":"119","severity":1,"message":"134","line":21,"column":8,"nodeType":"121","messageId":"122","endLine":21,"endColumn":24},{"ruleId":"119","severity":1,"message":"135","line":22,"column":8,"nodeType":"121","messageId":"122","endLine":22,"endColumn":16},{"ruleId":"119","severity":1,"message":"136","line":69,"column":9,"nodeType":"121","messageId":"122","endLine":69,"endColumn":13},{"ruleId":"119","severity":1,"message":"120","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":33},{"ruleId":"119","severity":1,"message":"123","line":1,"column":35,"nodeType":"121","messageId":"122","endLine":1,"endColumn":46},{"ruleId":"119","severity":1,"message":"124","line":1,"column":48,"nodeType":"121","messageId":"122","endLine":1,"endColumn":57},{"ruleId":"119","severity":1,"message":"126","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":12},{"ruleId":"119","severity":1,"message":"137","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":11},{"ruleId":"119","severity":1,"message":"138","line":10,"column":10,"nodeType":"121","messageId":"122","endLine":10,"endColumn":21},{"ruleId":"119","severity":1,"message":"139","line":11,"column":10,"nodeType":"121","messageId":"122","endLine":11,"endColumn":21},{"ruleId":"140","severity":1,"message":"141","line":117,"column":50,"nodeType":"142","messageId":"143","endLine":117,"endColumn":52},{"ruleId":"140","severity":1,"message":"141","line":117,"column":68,"nodeType":"142","messageId":"143","endLine":117,"endColumn":70},{"ruleId":"119","severity":1,"message":"144","line":4,"column":3,"nodeType":"121","messageId":"122","endLine":4,"endColumn":17},{"ruleId":"119","severity":1,"message":"145","line":10,"column":12,"nodeType":"121","messageId":"122","endLine":10,"endColumn":22},{"ruleId":"119","severity":1,"message":"146","line":12,"column":8,"nodeType":"121","messageId":"122","endLine":12,"endColumn":14},{"ruleId":"119","severity":1,"message":"147","line":13,"column":8,"nodeType":"121","messageId":"122","endLine":13,"endColumn":21},{"ruleId":"119","severity":1,"message":"148","line":14,"column":8,"nodeType":"121","messageId":"122","endLine":14,"endColumn":21},{"ruleId":"119","severity":1,"message":"149","line":15,"column":8,"nodeType":"121","messageId":"122","endLine":15,"endColumn":25},{"ruleId":"119","severity":1,"message":"150","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":19},{"ruleId":"119","severity":1,"message":"125","line":22,"column":8,"nodeType":"121","messageId":"122","endLine":22,"endColumn":14},{"ruleId":"119","severity":1,"message":"151","line":28,"column":8,"nodeType":"121","messageId":"122","endLine":28,"endColumn":17},{"ruleId":"119","severity":1,"message":"152","line":29,"column":8,"nodeType":"121","messageId":"122","endLine":29,"endColumn":19},{"ruleId":"119","severity":1,"message":"127","line":34,"column":10,"nodeType":"121","messageId":"122","endLine":34,"endColumn":21},{"ruleId":"119","severity":1,"message":"128","line":34,"column":23,"nodeType":"121","messageId":"122","endLine":34,"endColumn":36},{"ruleId":"119","severity":1,"message":"153","line":37,"column":8,"nodeType":"121","messageId":"122","endLine":37,"endColumn":15},{"ruleId":"119","severity":1,"message":"154","line":90,"column":7,"nodeType":"121","messageId":"122","endLine":90,"endColumn":11},{"ruleId":"119","severity":1,"message":"155","line":104,"column":10,"nodeType":"121","messageId":"122","endLine":104,"endColumn":27},{"ruleId":"119","severity":1,"message":"156","line":105,"column":10,"nodeType":"121","messageId":"122","endLine":105,"endColumn":20},{"ruleId":"119","severity":1,"message":"157","line":106,"column":10,"nodeType":"121","messageId":"122","endLine":106,"endColumn":15},{"ruleId":"119","severity":1,"message":"158","line":106,"column":17,"nodeType":"121","messageId":"122","endLine":106,"endColumn":25},{"ruleId":"119","severity":1,"message":"159","line":107,"column":10,"nodeType":"121","messageId":"122","endLine":107,"endColumn":13},{"ruleId":"160","severity":1,"message":"161","line":112,"column":5,"nodeType":"162","messageId":"163","endLine":112,"endColumn":34},{"ruleId":"160","severity":1,"message":"161","line":126,"column":7,"nodeType":"162","messageId":"163","endLine":126,"endColumn":38},{"ruleId":"164","severity":1,"message":"165","line":150,"column":48,"nodeType":"142","messageId":"166","endLine":150,"endColumn":49},{"ruleId":"167","severity":1,"message":"168","line":156,"column":6,"nodeType":"169","endLine":156,"endColumn":13,"suggestions":"170"},{"ruleId":"119","severity":1,"message":"171","line":158,"column":10,"nodeType":"121","messageId":"122","endLine":158,"endColumn":14},{"ruleId":"119","severity":1,"message":"172","line":159,"column":10,"nodeType":"121","messageId":"122","endLine":159,"endColumn":16},{"ruleId":"119","severity":1,"message":"173","line":165,"column":9,"nodeType":"121","messageId":"122","endLine":165,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":216,"column":20,"nodeType":"142","messageId":"143","endLine":216,"endColumn":22},{"ruleId":"119","severity":1,"message":"125","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":24},{"ruleId":"119","severity":1,"message":"135","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":16},{"ruleId":"119","severity":1,"message":"174","line":11,"column":8,"nodeType":"121","messageId":"122","endLine":11,"endColumn":24},{"ruleId":"119","severity":1,"message":"129","line":16,"column":8,"nodeType":"121","messageId":"122","endLine":16,"endColumn":18},{"ruleId":"119","severity":1,"message":"130","line":18,"column":8,"nodeType":"121","messageId":"122","endLine":18,"endColumn":12},{"ruleId":"119","severity":1,"message":"131","line":19,"column":8,"nodeType":"121","messageId":"122","endLine":19,"endColumn":16},{"ruleId":"119","severity":1,"message":"132","line":20,"column":8,"nodeType":"121","messageId":"122","endLine":20,"endColumn":15},{"ruleId":"119","severity":1,"message":"133","line":21,"column":8,"nodeType":"121","messageId":"122","endLine":21,"endColumn":16},{"ruleId":"119","severity":1,"message":"175","line":22,"column":8,"nodeType":"121","messageId":"122","endLine":22,"endColumn":15},{"ruleId":"119","severity":1,"message":"147","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"119","severity":1,"message":"149","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":25},{"ruleId":"119","severity":1,"message":"150","line":6,"column":8,"nodeType":"121","messageId":"122","endLine":6,"endColumn":19},{"ruleId":"119","severity":1,"message":"137","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":11},{"ruleId":"119","severity":1,"message":"176","line":8,"column":8,"nodeType":"121","messageId":"122","endLine":8,"endColumn":13},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'Avatar' is defined but never used.","'Grid' is defined but never used.","'createTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'IconButton' is defined but never used.","'Menu' is defined but never used.","'MenuIcon' is defined but never used.","'Tooltip' is defined but never used.","'MenuItem' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'temp' is assigned a value but never used.","'Box' is defined but never used.","'useNavigate' is defined but never used.","'useLocation' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'removeElements' is defined but never used.","'MarkerType' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'CardMedia' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'Item' is assigned a value but never used.","'reactFlowInstance' is assigned a value but never used.","'objectEdit' is assigned a value but never used.","'colId' is assigned a value but never used.","'setColId' is assigned a value but never used.","'pos' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'setNodes'. Either include it or remove the dependency array.","ArrayExpression",["177"],"'open' is assigned a value but never used.","'scroll' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'LockOutlinedIcon' is defined but never used.","'AdbIcon' is defined but never used.","'Paper' is defined but never used.",{"desc":"178","fix":"179"},"Update the dependencies array to be: [setNodes]",{"range":"180","text":"181"},[4576,4583],"[setNodes]"]